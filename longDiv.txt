   #include <iostream>
//using namespace std;

const char let[] = {"0123456789"};
const char slet[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

char codeNumberField(int min, int max, int value)
{ // Convert a value to a digit
    value = int(10 * (float)(value - min) / (float)(max - min));
    if (value < 0)
        value = 0;
    if (value > 9)
        value = 9;

    return let[value];
}

char codeCharacterField(int min, int max, int value)
{
    value = int(26. * (float)(value - min) / (float)(max - min));
    if (value < 0)
        value = 0;
    if (value > 25)
        value = 25;
    return slet[value];
}
    uint8_t db[] = {0, 3, 7, 10, 13, 17, 20, 23, 27, 30, 33, 37, 40, 43, 47, 50, 53, 57, 60};

    uint8_t code_dbField(int min, int max, int sensorValue)
    { // code sensor which will become the dbm for telemetry call instead of fine altitude
        int a;
        a = 18. * (sensorValue - min) / (max - min);
        if (a <= 0)
            a = 0;
        if (a > 18)
            a = 18;
        return db[a];
    }

int main()
{
    std::cout << "Hello World " << std::endl;

    float humidity = 888;
    float pressure = 9999;
    float temperature = 777;

    int divid1 = pressure;
    int divid2 = humidity * 1000 + temperature;
    int remainder1 = 0;
    int remainder2 = 0;

    int divisor[] = {19, 10, 10, 18, 18, 26, 26, 26, 10};
    int msg[9];
    char cmsg[] = "00000000";
    int work;
    for (int i = 0; i < 9; i++)
    {
        work = divid1;
        
        remainder1 = divid1 % divisor[i];
        divid1 = divid1 / divisor[i];

        remainder2 = (remainder1 * 1000000 + divid2) % divisor[i];
        divid2 = (remainder1 * 1000000 + divid2) / divisor[i];

        msg[i] = remainder2;
    }

    cmsg[0] = static_cast<char>(msg[0]);
    cmsg[1] = codeNumberField(0, 9, msg[1]);
    cmsg[2] = codeNumberField(0, 9, msg[2]);
    cmsg[3] = codeCharacterField(0, 25, msg[3]);
    cmsg[4] = codeCharacterField(0, 25, msg[4]);
    cmsg[5] = codeCharacterField(0, 25, msg[5]);
    cmsg[6] = codeCharacterField(0, 25, msg[6]);
    cmsg[7] = codeCharacterField(0, 25, msg[7]);
    cmsg[8] = codeNumberField(0, 9, msg[8]);

    std::cout << msg[0] ;
    for (int i=1; i<9;i++)
     std::cout << msg[i] ;

    std::cout << std::endl;
    
    for (int i=0; i < 9;i++)
     std::cout << cmsg[i] ;
    
    std::cout << std::endl;
    return 0;
}